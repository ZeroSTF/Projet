#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <SDL/SDL.h>
#include <SDL/SDL_ttf.h>
#include <SDL/SDL_mixer.h>
int main( int argc, char *argv[ ] )
{
    TTF_Init();
    int quit = 0;
    TTF_Font *font=NULL;
    char a[3][10]={"Play","Settings","Exit"};
    char b[3][20] = {"Volume", "Fullscreen", "Back To Menu"};
    SDL_Surface *text1[3];
    SDL_Surface *text2[3];
    SDL_Surface *image, *settings, *play;
    SDL_Surface *screen;
    SDL_Rect offset;
    SDL_Rect postext;
    SDL_Event event;
    SDL_Color white={255,255,255};
    SDL_Color red = {187, 0, 0};
    font=TTF_OpenFont("souls_font.ttf",90);
    offset.x = 0;
    offset.y = 0;
    if(Mix_OpenAudio(44100,MIX_DEFAULT_FORMAT,MIX_DEFAULT_CHANNELS,1024)==-1)
     	{
		printf("audio no can do %s\n",Mix_GetError());
	}
	Mix_Music *music;
	music=Mix_LoadMUS("mainmenu.mp3");
	Mix_PlayMusic(music,-1);
    if( TTF_Init() == -1 )
    {
        printf( "Can't TTF:  %s\n", SDL_GetError( ) );
        return EXIT_FAILURE;
    }
    if(font==NULL)
    {
        printf( "Can't font bruh:  %s\n", SDL_GetError( ) );
        return EXIT_FAILURE;
    }
	offset.x = 0;
	offset.y = 0;
    if( SDL_Init( SDL_INIT_VIDEO ) == -1 )
    {
        printf( "Can't init SDL:  %s\n", SDL_GetError( ) );
        return EXIT_FAILURE;
    }


    screen = SDL_SetVideoMode( 1920, 1080, 32, SDL_HWSURFACE | SDL_DOUBLEBUF | SDL_FULLSCREEN);

    if( screen == NULL )
    {
        printf( "Can't set video mode: %s\n", SDL_GetError( ) );
        return EXIT_FAILURE;
    }
    image=SDL_LoadBMP("1.bmp");
    if (image==NULL) printf(" %s\n", SDL_GetError( ));
    else {
	SDL_BlitSurface(image,NULL,screen,&offset);
	}

	int m = 0;
	int test = 0;
	int sett = 0;
	while(quit == 0){
		//if(sett == 0){

			for(int i=0;i<3;i++)
			{
				if(test == 0){
				text1[i]=TTF_RenderText_Blended(font,a[i],white);
 
				}
				else{
					if(i == m){
						text1[i]=TTF_RenderText_Blended(font,a[i],red);
					}
				else{
					text1[i]=TTF_RenderText_Blended(font,a[i],white);
				}
			}
				postext.x=310;
				postext.y=440+i*100;
				SDL_BlitSurface(text1[i], NULL,screen,&postext);
			}
		//}
		if(sett == 1){

			for(int i=0;i<3;i++)
			{
				if(test == 0){
				text2[i]=TTF_RenderText_Blended(font,b[i],white);
 
				}
				else{
					if(i == m){
						text2[i]=TTF_RenderText_Blended(font,b[i],red);
					}
				else{
					text1[i]=TTF_RenderText_Blended(font,b[i],white);
				}
			}
				postext.x=310;
				postext.y=440+i*100;
				SDL_BlitSurface(text2[i], NULL,screen,&postext);
			}
		}
    		while(SDL_PollEvent(&event))
		{


 			switch(sett){
				case 0:
					switch(event.type){
						case SDL_QUIT: {
							quit = 1;
						}
						break;
						case SDL_KEYDOWN:
							if(event.key.keysym.sym == SDLK_ESCAPE){
								quit = 1;
							}
							if(event.key.keysym.sym == SDLK_UP){
								if(test == 0){
									m = 0;
									test = 1;
							}
							else {
								m--;
								if(m<0){
								m=2;
								}
							}
						}
						if(event.key.keysym.sym == SDLK_DOWN){
							if(test == 0){
								m = 0;
								test = 1;
							}
							else{
								m++;
								if(m>2){
								m=0;}
							}

						}
						if(event.key.keysym.sym == SDLK_SPACE){

							if (m==0)
							{
								SDL_BlitSurface(image,NULL,screen,&offset);
								SDL_FreeSurface(text1[0]);
   								SDL_FreeSurface(text1[1]);
   								SDL_FreeSurface(text1[2]);
    								SDL_Flip(screen);
    								SDL_Delay (2000);
								SDL_FreeSurface(image);
								SDL_FreeSurface(play);

							}
						else if (m==1)
						{
							sett = 1;
							SDL_BlitSurface(settings,NULL,screen,&offset);
    							SDL_Flip(screen);
    							SDL_Delay (2000);
							SDL_FreeSurface(image);
							SDL_FreeSurface(settings);
						}
						}
						break;
						default:
						break;
					}
                        case 1:
                        switch(event.type){
						case SDL_QUIT: {
							quit = 1;
						}
						break;
						case SDL_KEYDOWN:
							if(event.key.keysym.sym == SDLK_ESCAPE){
								quit = 1;
							}
							if(event.key.keysym.sym == SDLK_UP){
								if(test == 0){
									m = 0;
									test = 1;
							}
							else {
								m--;
								if(m<0){
								m=2;
								}
							}
						}
						if(event.key.keysym.sym == SDLK_DOWN){
							if(test == 0){
								m = 0;
								test = 1;
							}
							else{
								m++;
								if(m>2){
								m=0;}
							}

						}
                            break;
                        break;
                        default:
                        break;
				}

		}
			SDL_Delay( 1 );

	}
	}
    TTF_CloseFont(font);
    Mix_FreeMusic(music);
    SDL_FreeSurface(image);
    SDL_FreeSurface(text1[0]);
    SDL_FreeSurface(text1[1]);
    SDL_FreeSurface(text1[2]);
    SDL_FreeSurface(screen);
    SDL_Quit();
    return EXIT_SUCCESS;
}

